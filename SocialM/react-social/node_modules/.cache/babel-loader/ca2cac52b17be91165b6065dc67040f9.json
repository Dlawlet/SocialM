{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\nouss\\\\OneDrive\\\\Images\\\\SocialM\\\\react-social\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\nouss\\\\OneDrive\\\\Images\\\\SocialM\\\\react-social\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"C:\\\\Users\\\\nouss\\\\OneDrive\\\\Images\\\\SocialM\\\\react-social\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\nouss\\\\OneDrive\\\\Images\\\\SocialM\\\\react-social\\\\src\\\\components\\\\feed\\\\Feed.jsx\";\nimport { useContext, useEffect, useState } from \"react\";\nimport Post from \"../post/Post\";\nimport Share from \"../share/Share\";\nimport \"./feed.css\";\nimport axios from \"axios\";\nimport { AuthContext } from \"../../context/AuthContext\";\nexport default function Feed(_ref) {\n  var _this = this;\n\n  var username = _ref.username;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      posts = _useState2[0],\n      setPosts = _useState2[1];\n\n  var _useContext = useContext(AuthContext),\n      user = _useContext.user;\n\n  useEffect(function () {\n    var fetchPosts = /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!username) {\n                  _context.next = 6;\n                  break;\n                }\n\n                _context.next = 3;\n                return axios.get(\"/posts/profile/\" + username);\n\n              case 3:\n                _context.t0 = _context.sent;\n                _context.next = 9;\n                break;\n\n              case 6:\n                _context.next = 8;\n                return axios.get(\"posts/timeline/\" + user._id);\n\n              case 8:\n                _context.t0 = _context.sent;\n\n              case 9:\n                res = _context.t0;\n                setPosts(res.data.sort(function (p1, p2) {\n                  return new Date(p2.createdAt) - new Date(p1.createdAt);\n                }));\n\n              case 11:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function fetchPosts() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    fetchPosts();\n  }, [username, user._id]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"feed\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"feedWrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, (!username || username === user.username) && /*#__PURE__*/React.createElement(Share, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 55\n    }\n  }), posts.map(function (p) {\n    return /*#__PURE__*/React.createElement(Post, {\n      key: p._id,\n      post: p,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }\n    });\n  })));\n}","map":{"version":3,"sources":["C:/Users/nouss/OneDrive/Images/SocialM/react-social/src/components/feed/Feed.jsx"],"names":["useContext","useEffect","useState","Post","Share","axios","AuthContext","Feed","username","posts","setPosts","user","fetchPosts","get","_id","res","data","sort","p1","p2","Date","createdAt","map","p"],"mappings":";;;;AAAA,SAASA,UAAT,EAAqBC,SAArB,EAAgCC,QAAhC,QAAgD,OAAhD;AACA,OAAOC,IAAP,MAAiB,cAAjB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,OAAO,YAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,2BAA5B;AAEA,eAAe,SAASC,IAAT,OAA4B;AAAA;;AAAA,MAAZC,QAAY,QAAZA,QAAY;;AAAA,kBACfN,QAAQ,CAAC,EAAD,CADO;AAAA;AAAA,MAClCO,KADkC;AAAA,MAC3BC,QAD2B;;AAAA,oBAExBV,UAAU,CAACM,WAAD,CAFc;AAAA,MAEjCK,IAFiC,eAEjCA,IAFiC;;AAIzCV,EAAAA,SAAS,CAAC,YAAM;AACd,QAAMW,UAAU;AAAA,2EAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACLJ,QADK;AAAA;AAAA;AAAA;;AAAA;AAAA,uBAEPH,KAAK,CAACQ,GAAN,CAAU,oBAAoBL,QAA9B,CAFO;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,uBAGPH,KAAK,CAACQ,GAAN,CAAU,oBAAoBF,IAAI,CAACG,GAAnC,CAHO;;AAAA;AAAA;;AAAA;AACXC,gBAAAA,GADW;AAIjBL,gBAAAA,QAAQ,CACNK,GAAG,CAACC,IAAJ,CAASC,IAAT,CAAc,UAACC,EAAD,EAAKC,EAAL,EAAY;AACxB,yBAAO,IAAIC,IAAJ,CAASD,EAAE,CAACE,SAAZ,IAAyB,IAAID,IAAJ,CAASF,EAAE,CAACG,SAAZ,CAAhC;AACD,iBAFD,CADM,CAAR;;AAJiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAH;;AAAA,sBAAVT,UAAU;AAAA;AAAA;AAAA,OAAhB;;AAUAA,IAAAA,UAAU;AACX,GAZQ,EAYN,CAACJ,QAAD,EAAWG,IAAI,CAACG,GAAhB,CAZM,CAAT;AAcA,sBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAAC,CAACN,QAAD,IAAaA,QAAQ,KAAKG,IAAI,CAACH,QAAhC,kBAA6C,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADhD,EAEGC,KAAK,CAACa,GAAN,CAAU,UAACC,CAAD;AAAA,wBACT,oBAAC,IAAD;AAAM,MAAA,GAAG,EAAEA,CAAC,CAACT,GAAb;AAAkB,MAAA,IAAI,EAAES,CAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADS;AAAA,GAAV,CAFH,CADF,CADF;AAUD","sourcesContent":["import { useContext, useEffect, useState } from \"react\";\nimport Post from \"../post/Post\";\nimport Share from \"../share/Share\";\nimport \"./feed.css\";\nimport axios from \"axios\";\nimport { AuthContext } from \"../../context/AuthContext\";\n\nexport default function Feed({ username }) {\n  const [posts, setPosts] = useState([]);\n  const { user } = useContext(AuthContext);\n\n  useEffect(() => {\n    const fetchPosts = async () => {\n      const res = username\n        ? await axios.get(\"/posts/profile/\" + username)\n        : await axios.get(\"posts/timeline/\" + user._id);\n      setPosts(\n        res.data.sort((p1, p2) => {\n          return new Date(p2.createdAt) - new Date(p1.createdAt);\n        })\n      );\n    };\n    fetchPosts();\n  }, [username, user._id]);\n\n  return (\n    <div className=\"feed\">\n      <div className=\"feedWrapper\">\n        {(!username || username === user.username) && <Share />}\n        {posts.map((p) => (\n          <Post key={p._id} post={p} />\n        ))}\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}